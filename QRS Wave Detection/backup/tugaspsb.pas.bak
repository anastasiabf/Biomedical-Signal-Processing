unit tugaspsb;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, Forms, Controls, Graphics, Dialogs, Grids, ExtCtrls,
  StdCtrls, ActnList, ComCtrls, TAGraph, TASeries, Math;

type

  { TForm1 }

  TForm1 = class(TForm)
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    Button4: TButton;
    Button5: TButton;
    Button6: TButton;
    Chart1: TChart;
    Chart1LineSeries1: TLineSeries;
    Chart2: TChart;
    Chart2LineSeries1: TLineSeries;
    Chart3: TChart;
    Chart3LineSeries1: TLineSeries;
    Chart4: TChart;
    Chart4LineSeries1: TLineSeries;
    Chart5: TChart;
    Chart5LineSeries1: TLineSeries;
    Chart5LineSeries2: TLineSeries;
    Chart5LineSeries3: TLineSeries;
    ComboBox1: TComboBox;
    Edit1: TEdit;
    Edit2: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    OpenDialog1: TOpenDialog;
    PageControl1: TPageControl;
    RadioButton1: TRadioButton;
    RadioButton2: TRadioButton;
    RadioButton3: TRadioButton;
    RadioButton4: TRadioButton;
    RadioButton5: TRadioButton;
    RadioGroup1: TRadioGroup;
    StringGrid1: TStringGrid;
    TabSheet1: TTabSheet;
    TabSheet2: TTabSheet;
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Button5Click(Sender: TObject);
    procedure Button6Click(Sender: TObject);
    procedure ComboBox1Change(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure PageControl1Change(Sender: TObject);
    procedure plot_ecg;
    procedure RadioGroup1Click(Sender: TObject);
    //procedure RadioGroup1Click(Sender: TObject);
  private

  public

  end;

var
  Form1: TForm1;
  d : TextFile;
  j, n1,ecg_lead,fs: Integer;
  temp:real;
 sequence, I, II, III, AVR, A, AVL, AVF : array [0..20000] of Extended;
  V1, V2, V3, V4, V5, V6 : array [0..20000] of Extended;
  hmav: array [0..100000] of Extended;
  min,max:extended;
  ECG_12lead : array [1..12,0..20000] of Extended;
  sinyal_ecg:array [0..200000] of Extended;
  ReX,ImX,MagX:array[0..10000] of real;
  w, hw : array [-1000..100000] of double;
implementation

{$R *.lfm}

{ TForm1 }

//input data
procedure TForm1.Button1Click(Sender: TObject);
begin
 j:=0;
  fs:=1000;
  Edit1.Text:=IntToStr(fs);
  if OpenDialog1.Execute then
  begin
    j:=0;
    StringGrid1.RowCount:= 10000;
    StringGrid1.ColCount:= 13;
    AssignFile(d, OpenDialog1.FileName);
    reset(d);
    ReadLn(d);
    ReadLn(d);
    while not EOF(d) do
    begin
    ReadLn(d,sequence[j],I[j],II[j],III[j],AVR[j],
    AVL[j],AVF[j],V1[j],V2[j],V3[j],V4[j],V5[j],V6[j]);
    ECG_12lead[1,j] := I[j];
    ECG_12lead[2,j] := II[j];
    ECG_12lead[3,j] := III[j];
    ECG_12lead[4,j] := AVR[j];
    ECG_12lead[5,j] := AVL[j];
    ECG_12lead[6,j] := AVF[j];
    ECG_12lead[7,j] := V1[j];
    ECG_12lead[8,j] := V2[j];
    ECG_12lead[9,j] := V3[j];
    ECG_12lead[10,j] := V4[j];
    ECG_12lead[11,j] := V5[j];
    ECG_12lead[12,j] := V6[j];
    StringGrid1.Cells[0,j] := FloatToStr(sequence[j]);
    StringGrid1.Cells[1,j] := FloatToStr(I[j]);
    StringGrid1.Cells[2,j] := FloatToStr(II[j]);
    StringGrid1.Cells[3,j] := FloatToStr(III[j]);
    StringGrid1.Cells[4,j] := FloatToStr(AVR[j]);
    StringGrid1.Cells[5,j] := FloatToStr(AVL[j]);
    StringGrid1.Cells[6,j] := FloatToStr(AVF[j]);
    StringGrid1.Cells[7,j] := FloatToStr(V1[j]);
    StringGrid1.Cells[8,j] := FloatToStr(V2[j]);
    StringGrid1.Cells[9,j] := FloatToStr(V3[j]);
    StringGrid1.Cells[10,j] := FloatToStr(V4[j]);
    StringGrid1.Cells[11,j] := FloatToStr(V5[j]);
    StringGrid1.Cells[12,j] := FloatToStr(V6[j]);
    j:=j+1
    end;
    n1:=j;
    CloseFile(d);
  end;
end;

//Plot ECG Signal
procedure TForm1.plot_ecg;
var i,j : Integer;
begin
  fs:=1000;
  Button1.Enabled := True;
  Chart1LineSeries1.Clear;
  min := 0;
  max := 0;
  for j := 0 to 11 do
  begin
    if ComboBox1.ItemIndex = j then
    begin
      ECG_Lead := (j+1);
      for i := 0 to n1-1 do
      begin
        sinyal_ecg[i] := ECG_12lead[ECG_Lead,i];
        if sinyal_ecg[i] < min then
        begin
          min := sinyal_ecg[i];
        end
        else if sinyal_ecg[i] > max then
        begin
          max := sinyal_ecg[i];
        end;
        Chart1LineSeries1.AddXY((i/fs),sinyal_ecg[i]);
      end;
    end
    else
    begin
      Continue;
    end;
  end;
end;

procedure TForm1.RadioGroup1Click(Sender: TObject);
begin

end;

//Plot ECG Signal
procedure TForm1.ComboBox1Change(Sender: TObject);
begin
  plot_ecg;
end;

procedure TForm1.FormCreate(Sender: TObject);
begin

end;

procedure TForm1.PageControl1Change(Sender: TObject);
begin

end;

//DFT ECG SIGNAL
procedure TForm1.Button2Click(Sender: TObject);
  var k, n : integer;
begin
  Chart2LineSeries1.Clear;
  for k := 0 to n1-1 do
   begin
     ReX[k]:=0;
     ImX[k]:=0;
     for n := 0 to n1-1 do
     begin
       ReX[k]:= ReX[k] + sinyal_ecg[n]*cos(2*pi*k*n/n1);
       ImX[k]:= ImX[k] - sinyal_ecg[n]*sin(2*pi*k*n/n1);
     end;
     MagX[k]:= Sqrt(power(ReX[k],2)+Power(ImX[k],2));
   end;
   for k:=0 to n1 div 2 do
   Chart2LineSeries1.AddXY((k*fs/n1),2*MagX[k]/n1);
end;

procedure TForm1.Button3Click(Sender: TObject);
  var a,b,M : integer;
begin
  Chart3LineSeries1.Clear;
  //Start MAV ECG Signal
  M:=StrToInt(Edit2.Text);
  for a:=0 to (n1-1) do
    begin
      temp:=0;
      for b:=0 to M-1 do
      begin
        if (a-b)<0 then
        begin
        temp:=temp+(1/M*sinyal_ecg[0]);
        end
        else if (a-b)>0 then
        begin
        temp:=temp+(1/M*sinyal_ecg[a-b]);
        end;
      hmav[a]:=temp;
      end;
      end;
      for a:=0 to n1-1 do
      begin
      Chart3LineSeries1.AddXY(a/fs,hmav[a]);
     end;
  end;

//WINDOW SEGMENTATION P,QRS,T WAVES
procedure TForm1.Button4Click(Sender: TObject);
var i,k:integer;
  rP1,rP2,rQRS1,rQRS2,rT1,rT2: Integer;
begin
  Chart5LineSeries1.Clear;
  Chart5LineSeries2.Clear;
  Chart5LineSeries3.Clear;
  Chart4LineSeries1.Clear;
  fs:=1000;

  //P Wave
  rP1 := 829;
  rP2 := 834;
  for i := rP1 to rP2 do
  begin
    if RadioButton1.Checked=True then
      begin
        //Rectangular Window
        w[i] := 1;
        hw[i] := hmav[i] * w[i];
      end

    else
    if RadioButton2.Checked=True then
      begin
        //Triangular Window
        w[i] := 1-Abs(((2*i)-(rP1-rP2))/((rP1-rp2)+1));
        hw[i] := hmav[i] * w[i];
      end
    else
    if RadioButton3.Checked=True then
      begin
        //Hanning Window
        w[i] := 0.5-(0.5*Cos((2*Pi*i)/(rP1-rP2)));
        hw[i] := hmav[i] * w[i];
      end
    else
    if RadioButton4.Checked=True then
      begin
        //Hamming Window
        w[i] := 0.54-(0.46*Cos((2*Pi*i)/(rP1-rP2)));
        hw[i] := hmav[i] * w[i];
      end
    else
    if RadioButton5.Checked=True then
    begin
      //Blackman Window
      w[i] := 0.42+(0.5*Cos((Pi*i)/(rP1-rP2)))+(0.8*Cos((Pi*i)/(rP1-rP2)));
      hw[i] := hmav[i] * w[i];
    end;

    Chart4LineSeries1.AddXY(i/fs, hw[i]);
  end;

  //DFT P Wave
  for k := 0 to n1-1 do
   begin
     ReX[k]:=0;
     ImX[k]:=0;
     for i := 0 to n1-1 do
     begin
       ReX[k] := ReX[k] + (hw[i]*cos(2*pi*(k)*(i)/(n1)));
       ImX[k] := ImX[k] - (hw[i]*sin(2*pi*(k)*(i)/(n1)));
     end;
      MagX[k]:= Sqrt(power(ReX[k],2)+Power(ImX[k],2));
   end;
   for k:=0 to n1 div 2 do
   Chart5LineSeries1.AddXY((k*fs/n1),2*MagX[k]/n1);

   //QRS Wave
   rQRS1 := 834;
   rQRS2 := 859;
  for i := rQRS1 to rQRS2 do
  begin
    if RadioButton1.Checked=True then
      begin
        //Rectangular Window
        w[i] := 1;
        hw[i] := hmav[i] * w[i];
      end

    else
    if RadioButton2.Checked=True then
      begin
        //Triangular Window
        w[i] := 1-Abs(((2*i)-(rQRS1-rQRS2))/((rQRS1-rQRS2)+1));
        hw[i] := hmav[i] * w[i];
      end
    else
    if RadioButton3.Checked=True then
      begin
        //Hanning Window
        w[i] := 0.5-(0.5*Cos((2*Pi*i)/(rQRS1-rQRS2)));
        hw[i] := hmav[i] * w[i];
      end
    else
    if RadioButton4.Checked=True then
      begin
        //Hamming Window
        w[i] := 0.54-(0.46*Cos((2*Pi*i)/(rQRS1-rQRS2)));
        hw[i] := hmav[i] * w[i];
      end
    else
    if RadioButton5.Checked=True then
    begin
      //Blackman Window
      w[i] := 0.42+(0.5*Cos((Pi*i)/(rQRS1-rQRS2)))+(0.8*Cos((Pi*i)/(rQRS1-rQRS2)));
      hw[i] := hmav[i] * w[i];
    end;

    Chart4LineSeries1.AddXY(i/fs, hw[i]);
  end;

  //DFT QRS Wave
  for k := 0 to n1-1 do
   begin
     ReX[k]:=0;
     ImX[k]:=0;
     for i := 0 to n1-1 do
     begin
       ReX[k] := ReX[k] + (hw[i]*cos(2*pi*(k)*(i)/(n1)));
       ImX[k] := ImX[k] - (hw[i]*sin(2*pi*(k)*(i)/(n1)));
     end;
      MagX[k]:= Sqrt(power(ReX[k],2)+Power(ImX[k],2));
   end;
   for k:=0 to n1 div 2 do
   Chart5LineSeries2.AddXY((k*fs/n1),2*MagX[k]/n1);

  //T Wave
     rT1 := 859;
     rT2 := 878;
    for i := rT1 to rT2 do
    begin
      if RadioButton1.Checked=True then
      begin
        //Rectangular Window
        w[i] := 1;
        hw[i] := hmav[i] * w[i];
      end
    else
    if RadioButton2.Checked=True then
      begin
        //Triangular Window
        w[i] := 1-Abs(((2*i)-(rT1-rT2))/((rT1-rT2)+1));
        hw[i] := hmav[i] * w[i];
      end
    else
    if RadioButton3.Checked=True then
      begin
        //Hanning Window
        w[i] := 0.5-(0.5*Cos((2*Pi*i)/(rT1-rT2)));
        hw[i] := hmav[i] * w[i];
      end
    else
    if RadioButton4.Checked=True then
      begin
        //Hamming Window
        w[i] := 0.54-(0.46*Cos((2*Pi*i)/(rT1-rT2)));
        hw[i] := hmav[i] * w[i];
      end
    else
    if RadioButton5.Checked=True then
    begin
      //Blackman Window
      w[i] := 0.42+(0.5*Cos((Pi*i)/(rT1-rT2)))+(0.8*Cos((Pi*i)/(rT1-rT2)));
      hw[i] := hmav[i] * w[i];
    end;

    Chart4LineSeries1.AddXY(i/fs, hw[i]);
  end;

  //DFT T Wave
  for k := 0 to n1-1 do
   begin
     ReX[k]:=0;
     ImX[k]:=0;
     for i := 0 to n1-1 do
     begin
       ReX[k] := ReX[k] + (hw[i]*cos(2*pi*(k)*(i)/(n1)));
       ImX[k] := ImX[k] - (hw[i]*sin(2*pi*(k)*(i)/(n1)));
     end;
      MagX[k]:= Sqrt(power(ReX[k],2)+Power(ImX[k],2));
   end;
   for k:=0 to n1 div 2 do
   Chart5LineSeries3.AddXY((k*fs/n1),2*MagX[k]/n1);
    end;

//Clear series
procedure TForm1.Button5Click(Sender: TObject);
begin
  Chart1LineSeries1.Clear;
  Chart2LineSeries1.Clear;
  Chart3LineSeries1.Clear;
  Chart4LineSeries1.Clear;
  Chart5LineSeries1.Clear;
  Chart5LineSeries2.Clear;
  Chart5LineSeries3.Clear;
end;

//Close
procedure TForm1.Button6Click(Sender: TObject);
begin
  close;
end;


end.

